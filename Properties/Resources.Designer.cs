//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MobaXtermKG.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MobaXtermKG.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Educational purposes only. No ads, no music, no bullshit..
        /// </summary>
        internal static string about_hdr_desc {
            get {
                return ResourceManager.GetString("about_hdr_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GPG KeyID.
        /// </summary>
        internal static string about_lbl_gpg {
            get {
                return ResourceManager.GetString("about_lbl_gpg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Digital Signature Thumbprint.
        /// </summary>
        internal static string about_lbl_thumbprint {
            get {
                return ResourceManager.GetString("about_lbl_thumbprint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Github Repo.
        /// </summary>
        internal static string about_lnk_github {
            get {
                return ResourceManager.GetString("about_lnk_github", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TPB Profile.
        /// </summary>
        internal static string about_lnk_tpb {
            get {
                return ResourceManager.GetString("about_lnk_tpb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap chat {
            get {
                object obj = ResourceManager.GetObject("chat", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap error {
            get {
                object obj = ResourceManager.GetObject("error", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap exclamation {
            get {
                object obj = ResourceManager.GetObject("exclamation", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap information {
            get {
                object obj = ResourceManager.GetObject("information", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to license file which will be placed inside the install path of MobaXterm..
        /// </summary>
        internal static string license_file_inside_mobaxterm {
            get {
                return ResourceManager.GetString("license_file_inside_mobaxterm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon mobaxterm_128 {
            get {
                object obj = ResourceManager.GetObject("mobaxterm_128", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap mobaxterm_logo_1 {
            get {
                object obj = ResourceManager.GetObject("mobaxterm_logo_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        internal static byte[] mobaxtgen_cli {
            get {
                object obj = ResourceManager.GetObject("mobaxtgen_cli", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must provide a name for license key.
        /// </summary>
        internal static string msgbox_err_generate_noname_msg {
            get {
                return ResourceManager.GetString("msgbox_err_generate_noname_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Name Specified.
        /// </summary>
        internal static string msgbox_err_generate_noname_title {
            get {
                return ResourceManager.GetString("msgbox_err_generate_noname_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate a required library file:{0}{1}{2}{3}Add the missing library file and restart the program..
        /// </summary>
        internal static string msgbox_err_libmissing_msg {
            get {
                return ResourceManager.GetString("msgbox_err_libmissing_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal Error.
        /// </summary>
        internal static string msgbox_err_libmissing_title {
            get {
                return ResourceManager.GetString("msgbox_err_libmissing_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a valid location to place the license. Try placing the keygen exe in the same folder as the MobaXterm program executable.{0}{1}Did you install MobaXterm on your computer?.
        /// </summary>
        internal static string msgbox_err_locate_msg {
            get {
                return ResourceManager.GetString("msgbox_err_locate_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No valid Path to MobaXterm.
        /// </summary>
        internal static string msgbox_err_locate_title {
            get {
                return ResourceManager.GetString("msgbox_err_locate_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License key has been successfully generated in:{0}{1}{2}.
        /// </summary>
        internal static string msgbox_ok_generate_finished_msg {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_finished_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License Key Generated.
        /// </summary>
        internal static string msgbox_ok_generate_finished_title {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_finished_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you wish to generate a new license key for MobaXterm?.
        /// </summary>
        internal static string msgbox_ok_generate_msg {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_msg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Generate License File?.
        /// </summary>
        internal static string msgbox_ok_generate_title {
            get {
                return ResourceManager.GetString("msgbox_ok_generate_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This program will generate a.
        /// </summary>
        internal static string program_will_generate {
            get {
                return ResourceManager.GetString("program_will_generate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap question {
            get {
                object obj = ResourceManager.GetObject("question", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the folder where Mobaxterm is installed.
        /// </summary>
        internal static string statusbar_btn_openfolder {
            get {
                return ResourceManager.GetString("statusbar_btn_openfolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press Generate to create license key ....
        /// </summary>
        internal static string statusbar_genlicense {
            get {
                return ResourceManager.GetString("statusbar_genlicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fatal Error: Can&apos;t find {0}.
        /// </summary>
        internal static string statusbar_libmissing {
            get {
                return ResourceManager.GetString("statusbar_libmissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter name to appear on license (required).
        /// </summary>
        internal static string statusbar_txt_name_mouseover {
            get {
                return ResourceManager.GetString("statusbar_txt_name_mouseover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter number of users license is good for. Default:.
        /// </summary>
        internal static string statusbar_txt_users_mouseover {
            get {
                return ResourceManager.GetString("statusbar_txt_users_mouseover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter version you are running. Default:.
        /// </summary>
        internal static string statusbar_txt_version_mouseover {
            get {
                return ResourceManager.GetString("statusbar_txt_version_mouseover", resourceCulture);
            }
        }
    }
}
